/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication9;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author мечта
 */
public class EX extends javax.swing.JFrame {
Connection conn = null;
ResultSet rs = null;
PreparedStatement pst = null;
    /**
     * Creates new form EX
     */
    public EX() {
        initComponents();
        conn = connect.java_db();
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2 - getWidth()/2, size.height/2 - getHeight()/2); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_job = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_area = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        txt_area.setRows(10);
        txt_area.setTabSize(4);
        jScrollPane1.setViewportView(txt_area);

        jButton1.setText("Max Salary");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Min Salary");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Avg Salary");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Submit");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setText("Job Title:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_job, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton4))
                        .addGap(111, 111, 111)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)))))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_job, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        try{
            CallableStatement cstmt = conn.prepareCall("{call dbms_output.enable(32000) }");
            cstmt.execute();
// Cursor 1          
            Statement stmt = conn.createStatement();
String sql =
    "declare  \n" +
    " CURSOR cur_emps IS SELECT ID, employeename, basepay FROM EMPLOYEE WHERE cast(regexp_replace(basepay, '[.]', ',') as decimal(10,2)) = (SELECT round(max(cast(regexp_replace(basepay, '[.]', ',') as decimal(10,2))),2) from employee);  \n" +
    " v_emps_record cur_emps%ROWTYPE;  \n" +
    "begin  \n" +
    "  OPEN cur_emps; \n" +
    "  loop \n" +
    "    FETCH cur_emps INTO v_emps_record;  \n" +
    "    EXIT WHEN cur_emps%NOTFOUND;  \n" +
    "    DBMS_OUTPUT.PUT_LINE('ID:' || v_emps_record.id || '    Name:' || v_emps_record.employeename || '   Max Salary:' || v_emps_record.basepay); \n" +
    "  end loop; \n" +
    "   CLOSE cur_emps; \n" + 
    "end;";
stmt.execute(sql);

// retrieve the messages written with dbms_output
cstmt = conn.prepareCall("{call dbms_output.get_line(?,?)}");
cstmt.registerOutParameter(1,java.sql.Types.VARCHAR);
cstmt.registerOutParameter(2,java.sql.Types.VARCHAR);


int status = 0;
while (status == 0)
{
    cstmt.execute();
    String line = cstmt.getString(1);
    status = cstmt.getInt(2);
    if (line != null && status == 0)
    {
//        System.out.println(line);
        txt_area.setText(line);
    }
}
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        try{
            CallableStatement cstmt = conn.prepareCall("{call dbms_output.enable(32000) }");
            cstmt.execute();
  // Cursor 2          
            Statement stmt = conn.createStatement();
String sql =
    "declare  \n" +
    " CURSOR cur_emps IS SELECT ID, employeename, basepay FROM EMPLOYEE WHERE cast(regexp_replace(basepay, '[.]', ',') as decimal(10,2)) = (SELECT round(min(cast(regexp_replace(basepay, '[.]', ',') as decimal(10,2))),2) from employee);  \n" +
    " v_emps_record cur_emps%ROWTYPE;  \n" +
    "begin  \n" +
    "  OPEN cur_emps; \n" +
    "  loop \n" +
    "    FETCH cur_emps INTO v_emps_record;  \n" +
    "    EXIT WHEN cur_emps%NOTFOUND;  \n" +
    "    DBMS_OUTPUT.PUT_LINE('ID:' || v_emps_record.id || '    Name:' || v_emps_record.employeename || '   Min Salary:' || v_emps_record.basepay); \n" +
    "  end loop; \n" +
    "   CLOSE cur_emps; \n" + 
    "end;";
stmt.execute(sql);

// retrieve the messages written with dbms_output
cstmt = conn.prepareCall("{call dbms_output.get_line(?,?)}");
cstmt.registerOutParameter(1,java.sql.Types.VARCHAR);
cstmt.registerOutParameter(2,java.sql.Types.VARCHAR);


int status = 0;
while (status == 0)
{
    cstmt.execute();
    String line = cstmt.getString(1);
    status = cstmt.getInt(2);
    if (line != null && status == 0)
    {
//        System.out.println(line);
        txt_area.setText(line);
    }
}
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try{
            CallableStatement cstmt = conn.prepareCall("{call dbms_output.enable(32000) }");
            cstmt.execute();
  //Cursor 3          
            Statement stmt = conn.createStatement();
String sql =
    "declare  \n" +
    " CURSOR cur_emps IS SELECT ID, employeename, basepay FROM EMPLOYEE WHERE cast(regexp_replace(basepay, '[.]', ',') as decimal(10,2)) > (SELECT round(avg(cast(regexp_replace(basepay, '[.]', ',') as decimal(10,2))),2) from employee);  \n" +
    " v_emps_record cur_emps%ROWTYPE;  \n" +
    "begin  \n" +
    "  OPEN cur_emps; \n" +
    "  loop \n" +
    "    FETCH cur_emps INTO v_emps_record;  \n" +
    "    EXIT WHEN cur_emps%NOTFOUND;  \n" +
    "    DBMS_OUTPUT.PUT_LINE('ID:' || v_emps_record.id || '    Name:' || v_emps_record.employeename || '   Average Salary:' || v_emps_record.basepay); \n" +
    "  end loop; \n" +
    "   CLOSE cur_emps; \n" + 
    "end;";
stmt.execute(sql);

// retrieve the messages written with dbms_output
cstmt = conn.prepareCall("{call dbms_output.get_line(?,?)}");
cstmt.registerOutParameter(1,java.sql.Types.VARCHAR);
cstmt.registerOutParameter(2,java.sql.Types.VARCHAR);


int status = 0;
while (status == 0)
{
    cstmt.execute();
    String line = cstmt.getString(1);
    status = cstmt.getInt(2);
    if (line != null && status == 0)
    {
//        System.out.println(line);
        txt_area.append(line);
        txt_area.append("\n");
    }
}
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
                try{
            CallableStatement cstmt = conn.prepareCall("{call dbms_output.enable(32000) }");
            cstmt.execute();
            
            String value = txt_job.getText();
 //Cursor           
            Statement stmt = conn.createStatement();
String sql =
    "declare  \n" +
    " CURSOR cur_emps IS SELECT ID, employeename, basepay FROM EMPLOYEE WHERE jobtitle = '"+value+"';  \n" +
    " v_emps_record cur_emps%ROWTYPE;  \n" +
    "begin  \n" +
    "  OPEN cur_emps; \n" +
    "  loop \n" +
    "    FETCH cur_emps INTO v_emps_record;  \n" +
    "    EXIT WHEN cur_emps%NOTFOUND;  \n" +
    "    DBMS_OUTPUT.PUT_LINE('ID:' || v_emps_record.id || '    Name:' || v_emps_record.employeename || '  Salary:' || v_emps_record.basepay); \n" +
    "  end loop; \n" +
    "   CLOSE cur_emps; \n" + 
    "end;";
stmt.execute(sql);

// retrieve the messages written with dbms_output
cstmt = conn.prepareCall("{call dbms_output.get_line(?,?)}");
cstmt.registerOutParameter(1,java.sql.Types.VARCHAR);
cstmt.registerOutParameter(2,java.sql.Types.VARCHAR);


int status = 0;
while (status == 0)
{
    cstmt.execute();
    String line = cstmt.getString(1);
    status = cstmt.getInt(2);
    if (line != null && status == 0)
    {
//        System.out.println(line);
        txt_area.append(line);
        txt_area.append("\n");
    }
}
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EX.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EX.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EX.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EX.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EX().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txt_area;
    private javax.swing.JTextField txt_job;
    // End of variables declaration//GEN-END:variables
}
